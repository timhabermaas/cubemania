version: "3.7"
services:
  db:
    image: postgres:9.5.3
    ports:
      - "5432:5432"
    volumes:
      - postgres-volume:/var/lib/postgresql/data
  nginx:
    restart: always
    build:
      context: .
      dockerfile: nginx/Dockerfile
    links:
      - web
    ports:
      - "443:443"
      - "8080:80"
    volumes:
      - ./public:/home/assets
      - ./nginx/certs:/etc/letsencrypt/live/www.cubemania.org
  records:
    build:
      context: ./records
      dockerfile: Dockerfile
    environment:
      RUST_LOG: trace
      RUST_BACKTRACE: 1
      HMAC_SECRET: someUnsecureSecret
      DATABASE_URL: postgresql://postgres@db/cubemania_production
    ports:
      - "8081:8081"
    depends_on:
      - db
  records-build:
    build:
      context: ./records
      dockerfile: Dockerfile
      target: builder
    depends_on:
      - db
    volumes:
      - ./records:/home/rust/src/records
  jobs:
    build: .
    command: ./start_jobs.sh
    volumes:
      - .:/cubemania
    links:
      - db
    environment:
      RAILS_ENV: production
      DATABASE_URL: postgresql://postgres@db/cubemania_production
  web:
    build: .
    command: bundle exec unicorn -p 3000 -c ./config/unicorn.rb
    volumes:
      - .:/cubemania
    ports:
      - "3000:3000"
    depends_on:
      #- jobs
      - records
      - db
      - cache
    environment:
      RAILS_ENV: production
      DATABASE_URL: postgresql://postgres@db/cubemania_production
      HMAC_SECRET: someUnsecureSecret

  cache:
    image: memcached:alpine
    command: memcached -m 64

  backup:
    build:
      context: backup
      dockerfile: Dockerfile
    volumes:
      - ~/.tarsnap:/root/keys
      - ~/.tarsnap/cache:/root/tarsnap-cache
    links:
      - db
volumes:
  postgres-volume:
