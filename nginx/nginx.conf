worker_processes  1;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    upstream rails_servers {
      server web:3000;
    }

    upstream frontend_servers {
      server frontend:4000;
    }

    upstream rust_servers {
      server records:8081;
    }

    server {
        server_name localhost;

        listen 80;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location ~* ^/assets/ {
          root /home/assets;
          expires 1y;
          gzip_static on;
          add_header Cache-Control public;
        }

        location ~* ^/.well-known/ {
          root /home/static;
        }

        location /api/singles.csv {
          proxy_pass http://rust_servers;
          proxy_redirect off;
          proxy_set_header Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $http_host;
        }
        location = /api/users {
          proxy_pass http://rust_servers;
          proxy_redirect off;
          proxy_set_header Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $http_host;
        }
        location = /api/max_singles_record {
          proxy_pass http://rust_servers;
          proxy_redirect off;
          proxy_set_header Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $http_host;
        }
        location = /api/me {
          proxy_pass http://rust_servers;
          proxy_redirect off;
          proxy_set_header Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $http_host;
        }
        location = /api/announcement {
          proxy_pass http://rust_servers;
          proxy_redirect off;
          proxy_set_header Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $http_host;
        }

        location = /users {
          proxy_pass http://frontend_servers;
          proxy_redirect off;
          proxy_set_header Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $http_host;
        }
        location = / {
          proxy_pass http://frontend_servers;
          proxy_redirect off;
          proxy_set_header Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $http_host;
        }
        location /screenshots {
          proxy_pass http://frontend_servers;
          proxy_redirect off;
          proxy_set_header Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $http_host;
        }
        location /_next {
          proxy_pass http://frontend_servers;
          proxy_redirect off;
          proxy_set_header Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $http_host;
        }
        location /__nextjs_original-stack-frame {
          proxy_pass http://frontend_servers;
          proxy_redirect off;
          proxy_set_header Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $http_host;
        }

        location / {
          proxy_pass http://rails_servers;
          proxy_redirect off;
          proxy_set_header Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $http_host;
        }


        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    server {
        server_name www.cubemania.org;

        # This * trick prevents an error during development if the certificates
        # haven't been found. See
        # https://stackoverflow.com/questions/47575376/nginx-only-enable-ssl-if-ssl-certificates-exist.
        include ssl.conf*;

        #access_log  logs/host.access.log  main;

        location ~* ^/assets/ {
          root /home/assets;
          expires 1y;
          gzip_static on;
          add_header Cache-Control public;
        }

        location ~* ^/.well-known/ {
          root /home/static;
        }

        location /api/singles.csv {
          proxy_pass http://rust_servers;
          proxy_redirect off;
          proxy_set_header Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $http_host;
        }
        location = /api/users {
          proxy_pass http://rust_servers;
          proxy_redirect off;
          proxy_set_header Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $http_host;
        }
        location = /api/max_singles_record {
          proxy_pass http://rust_servers;
          proxy_redirect off;
          proxy_set_header Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $http_host;
        }
        location = /api/me {
          proxy_pass http://rust_servers;
          proxy_redirect off;
          proxy_set_header Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $http_host;
        }
        location = /api/announcement {
          proxy_pass http://rust_servers;
          proxy_redirect off;
          proxy_set_header Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $http_host;
        }

        location = /users {
          proxy_pass http://frontend_servers;
          proxy_redirect off;
          proxy_set_header Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $http_host;
        }
        location = / {
          proxy_pass http://frontend_servers;
          proxy_redirect off;
          proxy_set_header Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $http_host;
        }
        location /screenshots {
          proxy_pass http://frontend_servers;
          proxy_redirect off;
          proxy_set_header Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $http_host;
        }


        location /_next {
          proxy_pass http://frontend_servers;
          proxy_redirect off;
          proxy_set_header Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $http_host;
        }

        location / {
          proxy_pass http://rails_servers;
          proxy_redirect off;
          proxy_set_header Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $http_host;
        }


        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    server {
        listen 80;
        server_name www.cubemania.org cubemania.org;

        location /.well-known/acme-challenge {
          root /home/static;
        }

        location / {
          return 301 https://www.cubemania.org$request_uri;
        }
    }

    include servers/*;
}
