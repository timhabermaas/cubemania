// Generated by CoffeeScript 1.10.0
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Cubemania.Collections.Kinds = (function(superClass) {
    extend(Kinds, superClass);

    function Kinds() {
      return Kinds.__super__.constructor.apply(this, arguments);
    }

    Kinds.prototype.model = Cubemania.Models.Kind;

    Kinds.prototype.puzzles = function() {
      var k, p, puzzleModels;
      puzzleModels = (function() {
        var i, len, ref, results;
        ref = this.models;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          k = ref[i];
          results.push((function() {
            var j, len1, ref1, results1;
            ref1 = k.puzzles.models;
            results1 = [];
            for (j = 0, len1 = ref1.length; j < len1; j++) {
              p = ref1[j];
              results1.push((p.set("kind", k.attributes), p));
            }
            return results1;
          })());
        }
        return results;
      }).call(this);
      return new Cubemania.Collections.Puzzles(_.flatten(puzzleModels));
    };

    return Kinds;

  })(Backbone.Collection);

}).call(this);
