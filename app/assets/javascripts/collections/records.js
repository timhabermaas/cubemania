// Generated by CoffeeScript 1.10.0
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Cubemania.Collections.Records = (function(superClass) {
    extend(Records, superClass);

    function Records() {
      this.moreRecordsArrived = bind(this.moreRecordsArrived, this);
      return Records.__super__.constructor.apply(this, arguments);
    }

    Records.prototype.model = Cubemania.Models.Record;

    Records.prototype.comparator = function(record) {
      return record.get("amount");
    };

    Records.prototype.url = function() {
      return "/api/puzzles/" + this.puzzleId + ("/records?page=" + (this.currentPage()) + "&type=" + (this.getType()));
    };

    Records.prototype.initialize = function(models, options) {
      if (options != null) {
        this.puzzleId = options.puzzleId;
        this.type = options.type;
        this.page = options.page;
        if (options.useLocalStorage) {
          return this.localStorage = new Backbone.LocalStorage("records-" + options.puzzleId);
        }
      }
    };

    Records.prototype.setPuzzleId = function(puzzleId) {
      return this.puzzleId = puzzleId;
    };

    Records.prototype.setType = function(type) {
      return this.type = type;
    };

    Records.prototype.getSingleRecord = function() {
      return this.getByAmount(1);
    };

    Records.prototype.getAvg5Record = function() {
      return this.getByAmount(5);
    };

    Records.prototype.getAvg12Record = function() {
      return this.getByAmount(12);
    };

    Records.prototype.currentPage = function() {
      return this.page || 1;
    };

    Records.prototype.getType = function() {
      return this.type || "avg5";
    };

    Records.prototype.loadMore = function() {
      var records;
      this.page = this.currentPage() + 1;
      records = new Cubemania.Collections.Records([], {
        page: this.page,
        puzzleId: this.puzzleId,
        type: this.getType()
      });
      records.on("reset", this.moreRecordsArrived, this);
      return records.fetch();
    };

    Records.prototype.moreRecordsArrived = function(records) {
      return this.add(records.models);
    };

    Records.prototype.getByAmount = function(amount) {
      return _.find(this.models, function(r) {
        return r.get("amount") === amount;
      });
    };

    return Records;

  })(Backbone.Collection);

}).call(this);
