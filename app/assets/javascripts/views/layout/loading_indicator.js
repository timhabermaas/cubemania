// Generated by CoffeeScript 1.10.0
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Cubemania.Views.LoadingIndicator = (function(superClass) {
    extend(LoadingIndicator, superClass);

    function LoadingIndicator() {
      this.stoppedLoading = bind(this.stoppedLoading, this);
      this.startedLoading = bind(this.startedLoading, this);
      return LoadingIndicator.__super__.constructor.apply(this, arguments);
    }

    LoadingIndicator.prototype.initialize = function() {
      if (!($("#loading").length > 0)) {
        $("body").append("<div id='loading'>Loading...</div>");
      }
      $("#loading").ajaxStart(this.startedLoading);
      return $("#loading").ajaxStop(this.stoppedLoading);
    };

    LoadingIndicator.prototype.startedLoading = function() {
      return this.timeoutInterval = setTimeout(this.show, 1000);
    };

    LoadingIndicator.prototype.show = function() {
      return $("#loading").show();
    };

    LoadingIndicator.prototype.stoppedLoading = function(m) {
      if (this.timeoutInterval != null) {
        clearTimeout(this.timeoutInterval);
        this.timeoutInterval = null;
      }
      return $("#loading").hide();
    };

    return LoadingIndicator;

  })(Backbone.View);

}).call(this);
