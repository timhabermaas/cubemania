// Generated by CoffeeScript 1.10.0
jQuery(function() {
  if (!$("#backbone-container").length) {
    return;
  }

  (function() {
    var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
      hasProp = {}.hasOwnProperty;

    Cubemania.Views.Stats = (function(superClass) {
      extend(Stats, superClass);

      function Stats() {
        return Stats.__super__.constructor.apply(this, arguments);
      }

      Stats.prototype.template = _.template($("#template-timer-stats").html());

      Stats.prototype.detailTemplate = _.template($("#template-timer-average-detail").html());

      Stats.prototype.tagName = "section";

      Stats.prototype.id = "stats";

      Stats.prototype.events = {
        "click .current .details": "currentAverageDetails"
      };

      Stats.prototype.initialize = function(options) {
        this.singles = options.singles;
        this.singles.on("reset", this.render, this);
        this.singles.on("change", this.render, this);
        this.singles.on("add", this.render, this);
        this.singles.on("destroy", this.render, this);
        this.records = options.records;
        return this.records.on("reset", this.render, this);
      };

      Stats.prototype.render = function() {
        var currentAverages, userSlug;
        currentAverages = {};
        currentAverages[5] = this.singles.currentAverage(5);
        currentAverages[12] = this.singles.currentAverage(12);
        currentAverages[100] = this.singles.currentMean(100);
        userSlug = Cubemania.currentUser.get("slug");
        $(this.el).html(this.template({
          currentAverages: currentAverages,
          records: this.records.models,
          userSlug: userSlug
        }));
        return this;
      };

      Stats.prototype.currentAverageDetails = function(event) {
        var count, html;
        event.preventDefault();
        count = $(event.currentTarget).data("count");
        html = this.detailTemplate({
          singles: this.singles.last(count)
        });
        return $.fancybox({
          content: html
        });
      };

      return Stats;

    })(Backbone.View);

  }).call(this);
});
