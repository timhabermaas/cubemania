name: Build and Publish images

on:
  # run it on push to the default repository branch
  push:
    branches: [master]
    tags: ['v*']
  # run it during pull request
  pull_request:

jobs:
  # define job to build and publish docker image
  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta for frontend
        id: meta_frontend
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/timhabermaas/cubemania_frontend
          tags: |
            type=semver,pattern={{version}}
            type=edge,branch=master
      - name: Build frontend image and push
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          target: prod-runner
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_frontend.outputs.tags }}
          labels: ${{ steps.meta_frontend.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/timhabermaas/cubemania_frontend:latest
          cache-to: type=inline

      - name: Docker meta for web
        id: meta_web
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/timhabermaas/cubemania_rails
          tags: |
            type=semver,pattern={{version}}
            type=edge,branch=master
      - name: Build web image and push
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ${{ steps.meta_web.outputs.tags }}
          labels: ${{ steps.meta_web.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=registry,ref=ghcr.io/timhabermaas/cubemania_rails:latest
          cache-to: type=inline

      - name: Docker meta for api
        id: meta_api
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/timhabermaas/cubemania_api
          tags: |
            type=semver,pattern={{version}}
            type=edge,branch=master
      - name: Build api image and push
        uses: docker/build-push-action@v2
        with:
          context: ./api
          tags: ${{ steps.meta_api.outputs.tags }}
          labels: ${{ steps.meta_api.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=registry,ref=ghcr.io/timhabermaas/cubemania_api:latest
          cache-to: type=inline

      - name: Docker meta for backup
        id: meta_backup
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/timhabermaas/cubemania_backup
          tags: |
            type=semver,pattern={{version}}
            type=edge,branch=master
      - name: Build backup image and push
        uses: docker/build-push-action@v2
        with:
          context: ./backup
          tags: ${{ steps.meta_backup.outputs.tags }}
          labels: ${{ steps.meta_backup.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=registry,ref=ghcr.io/timhabermaas/cubemania_backup:latest
          cache-to: type=inline
